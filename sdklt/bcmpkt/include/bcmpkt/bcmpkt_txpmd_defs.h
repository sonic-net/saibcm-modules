#ifndef BCMPKT_TXPMD_DEFS_H
#define BCMPKT_TXPMD_DEFS_H
/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: INTERNAL/regs/xgs/generate-pmd.pl
 *
 * Copyright 2018-2024 Broadcom. All rights reserved.
 * The term 'Broadcom' refers to Broadcom Inc. and/or its subsidiaries.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 
 * version 2 as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * A copy of the GNU General Public License version 2 (GPLv2) can
 * be found in the LICENSES folder.
 *
 * This file provides field macros for the TX Packet MetaData (TXPMD, called
 * SOBMH in hardware.) access.
 *
 ******************************************************************************/

/*!
 * \name TX packet metadata field IDs.
 * \anchor BCMPKT_TXPMD_XXX
 */
/*! \{ */
/*! Invalid BCMPKT_TXPMD FID indicator */
#define BCMPKT_TXPMD_FID_INVALID                 -1
/*! Start of frame indicator. */
#define BCMPKT_TXPMD_START                       0
/*!
 * 64 Header Types Supported. 1 means Packets from CPU with SOBMH header format
 * to Passthru NLF
 */
#define BCMPKT_TXPMD_HEADER_TYPE                 1
/*! PKT_LENGTH (set by hardware - in Iarb). */
#define BCMPKT_TXPMD_PKT_LENGTH                  2
/*! Pointer to cell buffer of this SOBMH cell. (Set by hardware) */
#define BCMPKT_TXPMD_IPCF_PTR                    3
/*! SOP indicator (set by hardware - in Iarb). */
#define BCMPKT_TXPMD_SOP                         4
/*! EOP indicator (set by hardware - in Iarb). */
#define BCMPKT_TXPMD_EOP                         5
/*! CELL_LENGTH (set by hardware - in Iarb). */
#define BCMPKT_TXPMD_CELL_LENGTH                 6
/*! CELL_ERROR or PURGE */
#define BCMPKT_TXPMD_CELL_ERROR                  7
/*! Indicates the local port to send a SOBMH packet out. */
#define BCMPKT_TXPMD_LOCAL_DEST_PORT             8
/*! Source module ID, must be programmed to MY_MODID. */
#define BCMPKT_TXPMD_SRC_MODID                   9
/*!
 * Class of service for MMU queueing for this packet - sets COS values,
 * PBI.UC_COS, PBI.MC_COS1, and PBI.MC_COS2.
 */
#define BCMPKT_TXPMD_COS                         10
/*! Traffic priority to be applied to MMU via PBI.INPUT_PRIORITY. */
#define BCMPKT_TXPMD_INPUT_PRI                   11
/*! Indicates that PBI.UNICAST should be set to queue as unicast packet. */
#define BCMPKT_TXPMD_UNICAST                     12
/*! Value for CCBI.RSQ_Q_NUM. */
#define BCMPKT_TXPMD_RQE_Q_NUM                   13
/*! Indicates that PBI.L2_BITMAP should be set (to queue as L2MC packet). */
#define BCMPKT_TXPMD_SET_L2BM                    14
/*! ONE STEP TIME STAMPING ENABLE */
#define BCMPKT_TXPMD_IEEE1588_ONE_STEP_ENABLE    15
/*! Regenerate UDP Checksum */
#define BCMPKT_TXPMD_IEEE1588_REGEN_UDP_CHECKSUM 16
/*! ITS_SIGN bit */
#define BCMPKT_TXPMD_IEEE1588_INGRESS_TIMESTAMP_SIGN 17
/*! HDR_OFFSET */
#define BCMPKT_TXPMD_IEEE1588_TIMESTAMP_HDR_OFFSET 18
/*!
 * Indicates for TS packet transmitted from CPU into IP that the outgoing packet
 * needs to have its transmit timestamp captured by the port.
 */
#define BCMPKT_TXPMD_TX_TS                       19
/*! For PBI.SPID_Override */
#define BCMPKT_TXPMD_SPID_OVERRIDE               20
/*! For PBI.SPID - Service Pool ID */
#define BCMPKT_TXPMD_SPID                        21
/*! For PBI.SPAP - Service Pool Priority (color) */
#define BCMPKT_TXPMD_SPAP                        22
/*! Will set CCBI_B.UNICAST_PKT */
#define BCMPKT_TXPMD_UNICAST_PKT                 23
/*! Timestamp action LSB. */
#define BCMPKT_TXPMD_TS_ACTION_LSB               24
/*! Timestamp action MSB. */
#define BCMPKT_TXPMD_TS_ACTION_MSB               25
/*! Time statmp type.  Encodings are 0-NTP TOD(64 bit), 1-PTP TOD(64bit) */
#define BCMPKT_TXPMD_TS_TYPE                     26
/*! Destination subport number */
#define BCMPKT_TXPMD_DST_SUBPORT_NUM             27
/*! Enable UDP incremental checksum */
#define BCMPKT_TXPMD_UDP_CHECKSUM_UPDATE_ENABLE  28
/*! Offset to UDP checksum field from start of MACS-SA. */
#define BCMPKT_TXPMD_UDP_CHECKSUM_OFFSET         29
/*! CNG Field. */
#define BCMPKT_TXPMD_CNG                         30
/*! DESTINATION Field. */
#define BCMPKT_TXPMD_DESTINATION                 31
/*! Destination Field Type. */
#define BCMPKT_TXPMD_DESTINATION_TYPE            32
/*! WRED Mark Eligible field. */
#define BCMPKT_TXPMD_WRED_MARK_ELIGIBLE          33
/*! WRED Response Field. */
#define BCMPKT_TXPMD_WRED_RESPONSE               34
/*! Allows software to select load balancing bitmap for non-unicast packets. */
#define BCMPKT_TXPMD_CPU_TX_MCAST_LB_INDEX       35
/*! ECMP member ID for case where DESTINATION_TYPE=ECMP_MEMBER. Only valid for single level ECMP */
#define BCMPKT_TXPMD_CPU_TX_ECMP_MEMBER_ID       36
/*! Destination Field. */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION          37
/*! Destination Field Type. */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE     38
/*! Drop Precedence. */
#define BCMPKT_TXPMD_CPU_TX_DP                   39
/*! Traffic priority to be applied to MMU via PBI.INPUT_PRIORITY. */
#define BCMPKT_TXPMD_CPU_TX_INPUT_PRI            40
/*! Internal congestion. */
#define BCMPKT_TXPMD_CPU_TX_INT_CN               41
/*! Internal priority */
#define BCMPKT_TXPMD_CPU_TX_INT_PRI              42
/*! Load balancing bitmap is valid indication. */
#define BCMPKT_TXPMD_CPU_TX_MCAST_LB_INDEX_VLD   43
/*! Pointer to CPU_PACKET_PROFILE_1/2 registers. */
#define BCMPKT_TXPMD_CPU_TX_PKT_PROFILE          44
/*! QoS fields (INT_PRI, DP, INT_CN) valid indication. */
#define BCMPKT_TXPMD_CPU_TX_QOS_FIELDS_VLD       45
/*! If set packet marked as Layer 3 routed. */
#define BCMPKT_TXPMD_CPU_TX_ROUTED_PKT           46
/*! Indicates that PBI.UNICAST should be set to queue as unicast packet. */
#define BCMPKT_TXPMD_CPU_TX_UNICAST              47
/*! SOP indication. */
#define BCMPKT_TXPMD_CPU_TX_SOP                  48
/*! VRF ID. */
#define BCMPKT_TXPMD_CPU_TX_VRF                  49
/*! VRF ID is valid. */
#define BCMPKT_TXPMD_CPU_TX_VRF_VALID            50
/*! WCMP Selection. */
#define BCMPKT_TXPMD_CPU_TX_WCMP_SEL             51
/*! Cell error. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_CELL_ERROR   52
/*! Cell length. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_CELL_LENGTH  53
/*! Class of service. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_COS          54
/*! Destination. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION  55
/*! Destination type. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE 56
/*! EOP indicator. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_EOP          57
/*! Input priority. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_INPUT_PRI    58
/*! LM counter action. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION 59
/*! LM counter ID. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ID 60
/*! OAM replacement offset. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_OAM_REPLACEMENT_OFFSET 61
/*! Packet length. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_PKT_LENGTH   62
/*! RQE Queue Number. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_RQE_Q_NUM    63
/*! SOP indicator. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_SOP          64
/*! Service Pool Allocation Precedence. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPAP         65
/*! Service Pool ID. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPID         66
/*! For Service Pool ID override. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPID_OVERRIDE 67
/*! Source module ID. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_SRC_MODID    68
/*! Timestamp action. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION 69
/*! Unicast packet. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_UNICAST      70
/*! Indicates a copy should be sent to the the CPU port mapped to R5. */
#define BCMPKT_TXPMD_COPY_TO_DEBUG               71

#define BCMPKT_TXPMD_COPY_TO_CPU                 72
/*! Used to set PBI.WRED_RESPONSIVE */
#define BCMPKT_TXPMD_WRED_RESPONSIVE             73
/*! Cookie correspoding to 1588 2-step */
#define BCMPKT_TXPMD_CPU_TX_COOKIE               74
/*! Validates Cookie field */
#define BCMPKT_TXPMD_CPU_TX_COOKIE_VALID         75
/*! The 8 LSB bits of Cookie corresponding to 1588 2-Step */
#define BCMPKT_TXPMD_COOKIE_7_0                  76
/*! The MSB of Cookie corresponding to 1588 2-Step */
#define BCMPKT_TXPMD_COOKIE_8                    77
/*! Unicast Valid. */
#define BCMPKT_TXPMD_UNICAST_VALID               78
/*! Indicates the vpp port to send a SOBMH packet out. */
#define BCMPKT_TXPMD_DST_VPP_PORT_NUM            79
/*! Indicates for TS packet transmitted from CPU into IP that the outgoing packet needs to have its transmit timestamp captured by the port. */
#define BCMPKT_TXPMD_IEEE1588_TX_TS              80
/*! Destination chip port number. */
#define BCMPKT_TXPMD_DST_CHIP_PORT_NUM           81
/*! Source chip port number. */
#define BCMPKT_TXPMD_SRC_CHIP_PORT_NUM           82
/*! Unicast packet type. */
#define BCMPKT_TXPMD_UNICAST_PKT_TYPE            83
/*! Unicast packet. */
#define BCMPKT_TXPMD_UNICAST_PKT_VALID           84
/*! vpp_port to send a SOBMH packet out. */
#define BCMPKT_TXPMD_TX_VPP_PORT                 85
/*! Destination chip_port number. */
#define BCMPKT_TXPMD_TX_CHIP_PORT                86
/*! RX chip port. */
#define BCMPKT_TXPMD_RX_CHIP_PORT                87
/*! Ingress vpp port. */
#define BCMPKT_TXPMD_RX_VPP_PORT                 88
/*! SVP */
#define BCMPKT_TXPMD_CPU_TX_SVP                  89
/*! TXPMD FIELD ID NUMBER */
#define BCMPKT_TXPMD_FID_COUNT                   90
/*! \} */

/*! TXPMD field name strings for debugging. */
#define BCMPKT_TXPMD_FIELD_NAME_MAP_INIT \
    {"START", BCMPKT_TXPMD_START},\
    {"HEADER_TYPE", BCMPKT_TXPMD_HEADER_TYPE},\
    {"PKT_LENGTH", BCMPKT_TXPMD_PKT_LENGTH},\
    {"IPCF_PTR", BCMPKT_TXPMD_IPCF_PTR},\
    {"SOP", BCMPKT_TXPMD_SOP},\
    {"EOP", BCMPKT_TXPMD_EOP},\
    {"CELL_LENGTH", BCMPKT_TXPMD_CELL_LENGTH},\
    {"CELL_ERROR", BCMPKT_TXPMD_CELL_ERROR},\
    {"LOCAL_DEST_PORT", BCMPKT_TXPMD_LOCAL_DEST_PORT},\
    {"SRC_MODID", BCMPKT_TXPMD_SRC_MODID},\
    {"COS", BCMPKT_TXPMD_COS},\
    {"INPUT_PRI", BCMPKT_TXPMD_INPUT_PRI},\
    {"UNICAST", BCMPKT_TXPMD_UNICAST},\
    {"RQE_Q_NUM", BCMPKT_TXPMD_RQE_Q_NUM},\
    {"SET_L2BM", BCMPKT_TXPMD_SET_L2BM},\
    {"IEEE1588_ONE_STEP_ENABLE", BCMPKT_TXPMD_IEEE1588_ONE_STEP_ENABLE},\
    {"IEEE1588_REGEN_UDP_CHECKSUM", BCMPKT_TXPMD_IEEE1588_REGEN_UDP_CHECKSUM},\
    {"IEEE1588_INGRESS_TIMESTAMP_SIGN", BCMPKT_TXPMD_IEEE1588_INGRESS_TIMESTAMP_SIGN},\
    {"IEEE1588_TIMESTAMP_HDR_OFFSET", BCMPKT_TXPMD_IEEE1588_TIMESTAMP_HDR_OFFSET},\
    {"TX_TS", BCMPKT_TXPMD_TX_TS},\
    {"SPID_OVERRIDE", BCMPKT_TXPMD_SPID_OVERRIDE},\
    {"SPID", BCMPKT_TXPMD_SPID},\
    {"SPAP", BCMPKT_TXPMD_SPAP},\
    {"UNICAST_PKT", BCMPKT_TXPMD_UNICAST_PKT},\
    {"TS_ACTION_LSB", BCMPKT_TXPMD_TS_ACTION_LSB},\
    {"TS_ACTION_MSB", BCMPKT_TXPMD_TS_ACTION_MSB},\
    {"TS_TYPE", BCMPKT_TXPMD_TS_TYPE},\
    {"DST_SUBPORT_NUM", BCMPKT_TXPMD_DST_SUBPORT_NUM},\
    {"UDP_CHECKSUM_UPDATE_ENABLE", BCMPKT_TXPMD_UDP_CHECKSUM_UPDATE_ENABLE},\
    {"UDP_CHECKSUM_OFFSET", BCMPKT_TXPMD_UDP_CHECKSUM_OFFSET},\
    {"CNG", BCMPKT_TXPMD_CNG},\
    {"DESTINATION", BCMPKT_TXPMD_DESTINATION},\
    {"DESTINATION_TYPE", BCMPKT_TXPMD_DESTINATION_TYPE},\
    {"WRED_MARK_ELIGIBLE", BCMPKT_TXPMD_WRED_MARK_ELIGIBLE},\
    {"WRED_RESPONSE", BCMPKT_TXPMD_WRED_RESPONSE},\
    {"CPU_TX::MCAST_LB_INDEX", BCMPKT_TXPMD_CPU_TX_MCAST_LB_INDEX},\
    {"CPU_TX::ECMP_MEMBER_ID", BCMPKT_TXPMD_CPU_TX_ECMP_MEMBER_ID},\
    {"CPU_TX::DESTINATION", BCMPKT_TXPMD_CPU_TX_DESTINATION},\
    {"CPU_TX::DESTINATION_TYPE", BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE},\
    {"CPU_TX::DP", BCMPKT_TXPMD_CPU_TX_DP},\
    {"CPU_TX::INPUT_PRI", BCMPKT_TXPMD_CPU_TX_INPUT_PRI},\
    {"CPU_TX::INT_CN", BCMPKT_TXPMD_CPU_TX_INT_CN},\
    {"CPU_TX::INT_PRI", BCMPKT_TXPMD_CPU_TX_INT_PRI},\
    {"CPU_TX::MCAST_LB_INDEX_VLD", BCMPKT_TXPMD_CPU_TX_MCAST_LB_INDEX_VLD},\
    {"CPU_TX::PKT_PROFILE", BCMPKT_TXPMD_CPU_TX_PKT_PROFILE},\
    {"CPU_TX::QOS_FIELDS_VLD", BCMPKT_TXPMD_CPU_TX_QOS_FIELDS_VLD},\
    {"CPU_TX::ROUTED_PKT", BCMPKT_TXPMD_CPU_TX_ROUTED_PKT},\
    {"CPU_TX::UNICAST", BCMPKT_TXPMD_CPU_TX_UNICAST},\
    {"CPU_TX::SOP", BCMPKT_TXPMD_CPU_TX_SOP},\
    {"CPU_TX::VRF", BCMPKT_TXPMD_CPU_TX_VRF},\
    {"CPU_TX::VRF_VALID", BCMPKT_TXPMD_CPU_TX_VRF_VALID},\
    {"CPU_TX::WCMP_SEL", BCMPKT_TXPMD_CPU_TX_WCMP_SEL},\
    {"OAM_DOWNMEP_TX::CELL_ERROR", BCMPKT_TXPMD_OAM_DOWNMEP_TX_CELL_ERROR},\
    {"OAM_DOWNMEP_TX::CELL_LENGTH", BCMPKT_TXPMD_OAM_DOWNMEP_TX_CELL_LENGTH},\
    {"OAM_DOWNMEP_TX::COS", BCMPKT_TXPMD_OAM_DOWNMEP_TX_COS},\
    {"OAM_DOWNMEP_TX::DESTINATION", BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION},\
    {"OAM_DOWNMEP_TX::DESTINATION_TYPE", BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE},\
    {"OAM_DOWNMEP_TX::EOP", BCMPKT_TXPMD_OAM_DOWNMEP_TX_EOP},\
    {"OAM_DOWNMEP_TX::INPUT_PRI", BCMPKT_TXPMD_OAM_DOWNMEP_TX_INPUT_PRI},\
    {"OAM_DOWNMEP_TX::LM_COUNTER_ACTION", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION},\
    {"OAM_DOWNMEP_TX::LM_COUNTER_ID", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ID},\
    {"OAM_DOWNMEP_TX::OAM_REPLACEMENT_OFFSET", BCMPKT_TXPMD_OAM_DOWNMEP_TX_OAM_REPLACEMENT_OFFSET},\
    {"OAM_DOWNMEP_TX::PKT_LENGTH", BCMPKT_TXPMD_OAM_DOWNMEP_TX_PKT_LENGTH},\
    {"OAM_DOWNMEP_TX::RQE_Q_NUM", BCMPKT_TXPMD_OAM_DOWNMEP_TX_RQE_Q_NUM},\
    {"OAM_DOWNMEP_TX::SOP", BCMPKT_TXPMD_OAM_DOWNMEP_TX_SOP},\
    {"OAM_DOWNMEP_TX::SPAP", BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPAP},\
    {"OAM_DOWNMEP_TX::SPID", BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPID},\
    {"OAM_DOWNMEP_TX::SPID_OVERRIDE", BCMPKT_TXPMD_OAM_DOWNMEP_TX_SPID_OVERRIDE},\
    {"OAM_DOWNMEP_TX::SRC_MODID", BCMPKT_TXPMD_OAM_DOWNMEP_TX_SRC_MODID},\
    {"OAM_DOWNMEP_TX::TIMESTAMP_ACTION", BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION},\
    {"OAM_DOWNMEP_TX::UNICAST", BCMPKT_TXPMD_OAM_DOWNMEP_TX_UNICAST},\
    {"COPY_TO_DEBUG", BCMPKT_TXPMD_COPY_TO_DEBUG},\
    {"COPY_TO_CPU", BCMPKT_TXPMD_COPY_TO_CPU},\
    {"WRED_RESPONSIVE", BCMPKT_TXPMD_WRED_RESPONSIVE},\
    {"CPU_TX::COOKIE", BCMPKT_TXPMD_CPU_TX_COOKIE},\
    {"CPU_TX::COOKIE_VALID", BCMPKT_TXPMD_CPU_TX_COOKIE_VALID},\
    {"COOKIE_7_0", BCMPKT_TXPMD_COOKIE_7_0},\
    {"COOKIE_8", BCMPKT_TXPMD_COOKIE_8},\
    {"UNICAST_VALID", BCMPKT_TXPMD_UNICAST_VALID},\
    {"DST_VPP_PORT_NUM", BCMPKT_TXPMD_DST_VPP_PORT_NUM},\
    {"IEEE1588_TX_TS", BCMPKT_TXPMD_IEEE1588_TX_TS},\
    {"DST_CHIP_PORT_NUM", BCMPKT_TXPMD_DST_CHIP_PORT_NUM},\
    {"SRC_CHIP_PORT_NUM", BCMPKT_TXPMD_SRC_CHIP_PORT_NUM},\
    {"UNICAST_PKT_TYPE", BCMPKT_TXPMD_UNICAST_PKT_TYPE},\
    {"UNICAST_PKT_VALID", BCMPKT_TXPMD_UNICAST_PKT_VALID},\
    {"TX_VPP_PORT", BCMPKT_TXPMD_TX_VPP_PORT},\
    {"TX_CHIP_PORT", BCMPKT_TXPMD_TX_CHIP_PORT},\
    {"RX_CHIP_PORT", BCMPKT_TXPMD_RX_CHIP_PORT},\
    {"RX_VPP_PORT", BCMPKT_TXPMD_RX_VPP_PORT},\
    {"CPU_TX::SVP", BCMPKT_TXPMD_CPU_TX_SVP},\
    {"fid count", BCMPKT_TXPMD_FID_COUNT}

/*!
 * \name BCMPKT_TXPMD_START encodings.
 * \anchor BCMPKT_TXPMD_START_XXX
 */
/*! \{ */
/*! The header used internally only */
#define BCMPKT_TXPMD_START_INTERNAL_HEADER       2
/*! Frame type is Higig */
#define BCMPKT_TXPMD_START_HIGIG                 3
/*! \} */

/*! BCMPKT_TXPMD_START encoding name strings for debugging. */
#define BCMPKT_TXPMD_START_NAME_MAP_INIT \
    {"RESERVED_COUNTER", 0},\
    {"RESERVED_COUNTER", 1},\
    {"INTERNAL_HEADER", BCMPKT_TXPMD_START_INTERNAL_HEADER},\
    {"HIGIG", BCMPKT_TXPMD_START_HIGIG},\

/*!
 * \name BCMPKT_TXPMD_HEADER_TYPE encodings.
 * \anchor BCMPKT_TXPMD_HEADER_TYPE_XXX
 */
/*! \{ */
/*! EP Copy to CPU format, SOBMH header in EP to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_TO_CPU             0
/*! Packets from CPU with SOBMH header format to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_FROM_CPU           1
/*! Header type CPU_TX */
#define BCMPKT_TXPMD_HEADER_T_CPU_TX             2
/*! MAC in MAC packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_MIM                2
/*! MPLS packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_MPLS_PMP           3
/*! Trill Network Packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_TRILL_NW           4
/*! Trill Access Layer Packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_TRILL_AC           5
/*! WLAN Decap packets sent to WRX NLF */
#define BCMPKT_TXPMD_HEADER_T_WLAN_DECAP         6
/*! WLAN Encap packets sent to WTX NLF */
#define BCMPKT_TXPMD_HEADER_T_WLAN_ENCAP         7
/*! QCN Packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_QCN                8
/*! DPI/Signature Matcher packets sent to SM NLF */
#define BCMPKT_TXPMD_HEADER_T_SM_DPI             9
/*! EP Redirection packets to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_EP_REDIR           10
/*! Other generic passthrough to Passthru NLF */
#define BCMPKT_TXPMD_HEADER_T_GENERIC            11
/*! DOWN MEP Transmit OAM Packets from CPU or CCM from HW Engine or OLP */
#define BCMPKT_TXPMD_HEADER_T_OAM_DOWNMEP_TX     12
/*! UP MEP Transmit OAM Packets from CPU or CCM from HW Engine or OLP */
#define BCMPKT_TXPMD_HEADER_T_OAM_UPMEP_TX       13
/*! \} */

/*! BCMPKT_TXPMD_HEADER_TYPE encoding name strings for debugging. */
#define BCMPKT_TXPMD_HEADER_TYPE_NAME_MAP_INIT \
    {"SOBMH_EP_COPY_TO_CPU", BCMPKT_TXPMD_HEADER_T_TO_CPU},\
    {"SOBMH_FROM_CPU", BCMPKT_TXPMD_HEADER_T_FROM_CPU},\
    {"CPU_TX", BCMPKT_TXPMD_HEADER_T_CPU_TX},\
    {"MIM", BCMPKT_TXPMD_HEADER_T_MIM},\
    {"MPLS_PMP", BCMPKT_TXPMD_HEADER_T_MPLS_PMP},\
    {"TRILL_NW", BCMPKT_TXPMD_HEADER_T_TRILL_NW},\
    {"TRILL_AC", BCMPKT_TXPMD_HEADER_T_TRILL_AC},\
    {"WLAN_DECAP", BCMPKT_TXPMD_HEADER_T_WLAN_DECAP},\
    {"WLAN_ENCAP", BCMPKT_TXPMD_HEADER_T_WLAN_ENCAP},\
    {"QCN", BCMPKT_TXPMD_HEADER_T_QCN},\
    {"SM_DPI", BCMPKT_TXPMD_HEADER_T_SM_DPI},\
    {"EP_REDIR", BCMPKT_TXPMD_HEADER_T_EP_REDIR},\
    {"GENERIC", BCMPKT_TXPMD_HEADER_T_GENERIC},\
    {"OAM_DOWNMEP_TX", BCMPKT_TXPMD_HEADER_T_OAM_DOWNMEP_TX},\
    {"OAM_UPMEP_TX", BCMPKT_TXPMD_HEADER_T_OAM_UPMEP_TX},\

/*!
 * \name BCMPKT_TXPMD_DESTINATION_TYPE encodings.
 * \anchor BCMPKT_TXPMD_DESTINATION_TYPE_XXX
 */
/*! \{ */
/*! Egress Port */
#define BCMPKT_TXPMD_DESTINATION_T_EGRESS_PORT   0
/*! Asserts bit selected by destination field in L2_PBM */
#define BCMPKT_TXPMD_DESTINATION_T_L2_PBM        7
/*! Destination is Invalid */
#define BCMPKT_TXPMD_DESTINATION_T_INVALID       15
/*! \} */

/*! BCMPKT_TXPMD_DESTINATION_TYPE encoding name strings for debugging. */
#define BCMPKT_TXPMD_DESTINATION_TYPE_NAME_MAP_INIT \
    {"EGRESS_PORT", BCMPKT_TXPMD_DESTINATION_T_EGRESS_PORT},\
    {"RESERVED_COUNTER", 1},\
    {"RESERVED_COUNTER", 2},\
    {"RESERVED_COUNTER", 3},\
    {"RESERVED_COUNTER", 4},\
    {"RESERVED_COUNTER", 5},\
    {"RESERVED_COUNTER", 6},\
    {"L2_PBM", BCMPKT_TXPMD_DESTINATION_T_L2_PBM},\
    {"RESERVED_COUNTER", 8},\
    {"RESERVED_COUNTER", 9},\
    {"RESERVED_COUNTER", 10},\
    {"RESERVED_COUNTER", 11},\
    {"RESERVED_COUNTER", 12},\
    {"RESERVED_COUNTER", 13},\
    {"RESERVED_COUNTER", 14},\
    {"INVALID", BCMPKT_TXPMD_DESTINATION_T_INVALID},\

/*!
 * \name BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE encodings.
 * \anchor BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE_XXX
 */
/*! \{ */
/*! Egress Port */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_EGRESS_PORT 0
/*! Next Hop Index */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_NHI    1
/*! ECMP Group */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_ECMP   2
/*! ECMP member id */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_ECMP_MEMBER 3
/*! IP Multicast Group */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_IPMC   4
/*! L2MC group */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_L2MC   5
/*! Vlan Flooding */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_VLAN_FLOOD 6
/*! Asserts bit selected by destination field in L2_PBM */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_L2_PBM 7
/*! LAG ID */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_LAG_ID 8
/*! Forward and derive destination normally */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_FORWARD 15
/*! Destination is Invalid */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_T_INVALID 15
/*! \} */

/*! BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE encoding name strings for debugging. */
#define BCMPKT_TXPMD_CPU_TX_DESTINATION_TYPE_NAME_MAP_INIT \
    {"EGRESS_PORT", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_EGRESS_PORT},\
    {"NHI", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_NHI},\
    {"ECMP", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_ECMP},\
    {"ECMP_MEMBER", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_ECMP_MEMBER},\
    {"IPMC", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_IPMC},\
    {"L2MC", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_L2MC},\
    {"VLAN_FLOOD", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_VLAN_FLOOD},\
    {"L2_PBM", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_L2_PBM},\
    {"LAG_ID", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_LAG_ID},\
    {"RESERVED_COUNTER", 9},\
    {"RESERVED_COUNTER", 10},\
    {"RESERVED_COUNTER", 11},\
    {"RESERVED_COUNTER", 12},\
    {"RESERVED_COUNTER", 13},\
    {"RESERVED_COUNTER", 14},\
    {"FORWARD", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_FORWARD},\
    {"INVALID", BCMPKT_TXPMD_CPU_TX_DESTINATION_T_INVALID},\

/*!
 * \name BCMPKT_TXPMD_CPU_TX_DP encodings.
 * \anchor BCMPKT_TXPMD_CPU_TX_DP_XXX
 */
/*! \{ */
/*! Green */
#define BCMPKT_TXPMD_CPU_TX_DP_GREEN             0
/*! Red */
#define BCMPKT_TXPMD_CPU_TX_DP_RED               1
/*! Yellow */
#define BCMPKT_TXPMD_CPU_TX_DP_YELLOW            3
/*! \} */

/*! BCMPKT_TXPMD_CPU_TX_DP encoding name strings for debugging. */
#define BCMPKT_TXPMD_CPU_TX_DP_NAME_MAP_INIT \
    {"GREEN", BCMPKT_TXPMD_CPU_TX_DP_GREEN},\
    {"RED", BCMPKT_TXPMD_CPU_TX_DP_RED},\
    {"RESERVED_COUNTER", 2},\
    {"YELLOW", BCMPKT_TXPMD_CPU_TX_DP_YELLOW},\

/*!
 * \name BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE encodings.
 * \anchor BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE_XXX
 */
/*! \{ */
/*! Egress Port */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_T_EGRESS_PORT 0
/*! \} */

/*! BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE encoding name strings for debugging. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_TYPE_NAME_MAP_INIT \
    {"EGRESS_PORT", BCMPKT_TXPMD_OAM_DOWNMEP_TX_DESTINATION_T_EGRESS_PORT},\

/*!
 * \name BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION encodings.
 * \anchor BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_XXX
 */
/*! \{ */
/*! No operation. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_NO_OP 0
/*! Increment. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_INCREMENT 1
/*! Increment and sample. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_INCREMENT_SAMPLE 2
/*! Sample. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_SAMPLE 3
/*! \} */

/*! BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION encoding name strings for debugging. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_NAME_MAP_INIT \
    {"NO_OP", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_NO_OP},\
    {"INCREMENT", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_INCREMENT},\
    {"INCREMENT_SAMPLE", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_INCREMENT_SAMPLE},\
    {"SAMPLE", BCMPKT_TXPMD_OAM_DOWNMEP_TX_LM_COUNTER_ACTION_SAMPLE},\

/*!
 * \name BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION encodings.
 * \anchor BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_XXX
 */
/*! \{ */
/*! No operation. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_NO_OP 0
/*! Sample timestamp. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_SAMPLE 1
/*! \} */

/*! BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION encoding name strings for debugging. */
#define BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_NAME_MAP_INIT \
    {"NO_OP", BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_NO_OP},\
    {"SAMPLE", BCMPKT_TXPMD_OAM_DOWNMEP_TX_TIMESTAMP_ACTION_SAMPLE},\

/*!
 * \name TX packet metadata internal usage field IDs.
 * \anchor BCMPKT_TXPMD_I_XXX
 */
/*! \{ */
/*! Invalid BCMPKT_TXPMD_I FID indicator */
#define BCMPKT_TXPMD_I_FID_INVALID               -1
/*! TXPMD RX raw data size. */
#define BCMPKT_TXPMD_I_SIZE                      0
/*! TXPMD_I FIELD ID NUMBER */
#define BCMPKT_TXPMD_I_FID_COUNT                 1
/*! \} */

/*! TXPMD_I field name strings for debugging. */
#define BCMPKT_TXPMD_I_FIELD_NAME_MAP_INIT \
    {"SIZE", BCMPKT_TXPMD_I_SIZE},\
    {"fid count", BCMPKT_TXPMD_I_FID_COUNT}

#endif /*! BCMPKT_TXPMD_DEFS_H */
