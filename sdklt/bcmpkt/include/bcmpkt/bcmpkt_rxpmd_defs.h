#ifndef BCMPKT_RXPMD_DEFS_H
#define BCMPKT_RXPMD_DEFS_H
/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 * Tool: INTERNAL/regs/xgs/generate-pmd.pl
 *
 * Copyright 2018-2024 Broadcom. All rights reserved.
 * The term 'Broadcom' refers to Broadcom Inc. and/or its subsidiaries.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 
 * version 2 as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * A copy of the GNU General Public License version 2 (GPLv2) can
 * be found in the LICENSES folder.
 *
 * This file provides field macros for RX Packet Metadata (RXPMD, called
 * EP_TO_CPU in hardware) access.
 *
 ******************************************************************************/

/*!
 * \name RX packet metadata field IDs.
 * \anchor BCMPKT_RXPMD_XXX
 */
/*! \{ */
/*! Invalid BCMPKT_RXPMD FID indicator */
#define BCMPKT_RXPMD_FID_INVALID                 -1
/*! Cell was stored in Unicast Queue in MMU. */
#define BCMPKT_RXPMD_UNICAST_QUEUE               0
/*! Queue number used in MMU, PBE field */
#define BCMPKT_RXPMD_QUEUE_NUM                   1
/*! OVERLAY ON QUEUE_NUM Queue number used in MMU for cpu port, PBE field */
#define BCMPKT_RXPMD_CPU_COS                     2
/*!
 * Valid only for packets which came in on Higig+ source port. Higig+ module
 * header field, PBE field.
 */
#define BCMPKT_RXPMD_HGI                         3
/*! Matched Rule, PBE field. */
#define BCMPKT_RXPMD_MATCHED_RULE                4
/*! DO NOT CHANGE, USED BY CMIC HW: Packet length after all modification. */
#define BCMPKT_RXPMD_PKT_LENGTH                  5
/*! Source Port Number, PBE field. */
#define BCMPKT_RXPMD_SRC_PORT_NUM                6
/*! Inner VID. */
#define BCMPKT_RXPMD_INNER_VID                   7
/*! Inner CFI */
#define BCMPKT_RXPMD_INNER_CFI                   8
/*! Inner priority. */
#define BCMPKT_RXPMD_INNER_PRI                   9
/*! Outer VID. */
#define BCMPKT_RXPMD_OUTER_VID                   10
/*! Outer Canoncial Format Indicator. */
#define BCMPKT_RXPMD_OUTER_CFI                   11
/*! Outer Priority. */
#define BCMPKT_RXPMD_OUTER_PRI                   12
/*! Special packet. */
#define BCMPKT_RXPMD_SPECIAL_PACKET_INDICATOR    13
/*! Special packet type. */
#define BCMPKT_RXPMD_SPECIAL_PACKET_TYPE         14
/*! Set to 1 if the DSCP value has been changed by the EP */
#define BCMPKT_RXPMD_CHANGE_DSCP                 15
/*! New DSCP value computed by the chip (EP) for the packet */
#define BCMPKT_RXPMD_DSCP                        16
/*! Change the ECN as indicated by the IFP. */
#define BCMPKT_RXPMD_CHANGE_ECN                  17
/*! New ECN value provided by the IFP. */
#define BCMPKT_RXPMD_ECN                         18
/*!
 * NEW This pretty much maps from EP_TO_CPU_HEADER_OVERLAY_TYPE from the MPB
 * 0: Invalid
 * 1: TIMESTAMP field carries the LM packet-count for an OAM loss measurement
 *    packet
 * 2: TIMESTAMP_UPPER,TIMESTAMP fields carry the 64-bit DM Time-stamp for an
 *    OAMdelay measurement packet
 * 3: 802.1AS timestamp in the TIMESTAMP field
 */
#define BCMPKT_RXPMD_TIMESTAMP_TYPE              19
/*! Low 32 bits of timestamp. */
#define BCMPKT_RXPMD_TIMESTAMP                   20
/*! High 32/16bits of timestamp. */
#define BCMPKT_RXPMD_TIMESTAMP_HI                21
/*! Mirror-to-Port Index, PBE field */
#define BCMPKT_RXPMD_MTP_INDEX                   22
/*! BPDU Packet, PBE field */
#define BCMPKT_RXPMD_BPDU                        23
/*! Indicates the packet is generated as a result of packet replication */
#define BCMPKT_RXPMD_REPLICATION                 24
/*! L3 IP Multicast Packet Flag, PBE field */
#define BCMPKT_RXPMD_L3ONLY                      25
/*! Indicates packet was routed - UC OR MC */
#define BCMPKT_RXPMD_IP_ROUTED                   26
/*! Source port is Higig. */
#define BCMPKT_RXPMD_SRC_HIGIG                   27
/*! Source port is Higig2. */
#define BCMPKT_RXPMD_SRC_HIGIG2                  28
/*! Indicates all switch copies were dropped in MMU (for copies to CPU port). */
#define BCMPKT_RXPMD_UC_SW_COPY_DROPPED          29
/*!
 * Flag to indicate this is a switched packet as opposed to a mirrored packet,
 * PBE field
 */
#define BCMPKT_RXPMD_SWITCH                      30
/*! Indicates there is an SD tag in the packet */
#define BCMPKT_RXPMD_SD_TAG_PRESENT              31
/*!
 * Indicates ingress inner VLAN tag action, PBE field:
 * 0: do not modify, 1: add I-VID, 2: replace I-VID, 3: remove I-VID
 */
#define BCMPKT_RXPMD_ING_ITAG_ACTION             32
/*!
 * Indicates ingress outer VLAN tag action, PBE field:
 * 0: do not modify, 1: add O-VID, 2: replace O-VID, 3: reserved
 */
#define BCMPKT_RXPMD_ING_OTAG_ACTION             33
/*!
 * Indicates the incoming tag status (INCOMING_TAG_STATUS):
 * For single tag device:
 *   0: untagged, 1: tagged
 * For double tag device:
 *   0: untagged, 1: single inner-tag, 2: single outer-tag, 3: double tagged
 */
#define BCMPKT_RXPMD_ING_TAG_TYPE                34
/*!
 * This field is set by the ingress chip to indicate to the egress chip that 1588
 * 1-step ingress correction update has been applied to this packet. Egress chip
 * uses this bit when egress port CF_UPDATE_MODE is set to ING_UPDATE_BASED_ENABLE.
 * Encodings are:
 * 0: Ingress correction update has NOT been applied to the packet. When configured
 *    in coupled mode, egress chip must NOT apply the egress correction update for
 *    this packet.
 * 1: Ingress correction update has been applied to the packet. When configured in
 *    coupled mode, egress chip must apply the egress correction update.
 */
#define BCMPKT_RXPMD_ONE_STEP_1588_ING_UPDATE_DONE 35
/*! The full 32-bit EH tag */
#define BCMPKT_RXPMD_EH_TAG                      36
/*!
 * Defines the header type enabling flexibility for future applications.
 * 0x0: Queue selections for Sirius/Arad.
 * 0x1: ClassID
 * 0x2: ClassID + QTag
 * 0x3-0x15: Reserved for future use.
 */
#define BCMPKT_RXPMD_EH_TYPE                     37
/*! See EH_SEG_SEL_ENCODING format */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_SEG_SEL        38
/*!
 * EH queue tag assignment
 * 00: No EH queue tag assignment,
 * 01-11: EH queue tag assignment modes
 */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_TAG_TYPE       39
/*! EH queue tag */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_QUEUE_TAG      40
/*! Type of CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_1_CLASSID_TYPE      41
/*! L3_IIF */
#define BCMPKT_RXPMD_EH_TYPE_1_L3_IIF            42
/*! CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_1_CLASSID           43
/*! Type of CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_2_CLASSID_TYPE      44
/*! CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_2_CLASSID           45
/*! L3_IIF */
#define BCMPKT_RXPMD_EH_TYPE_2_EH_QUEUE_TAG      46
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_START_OFFSET         47
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_START_OFFSET_TYPE    48
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_SESSION_INDEX        49
/*! The reason code TYPE. */
#define BCMPKT_RXPMD_REASON_TYPE                 50
/*!
 * This should be the final control in the EP indicating to not change the TTL,
 * from any source.
 */
#define BCMPKT_RXPMD_DO_NOT_CHANGE_TTL           51
/*! Valid for non-BFD packet */
#define BCMPKT_RXPMD_I2E_CLASSID_TYPE            52
/*! Valid for non-BFD packet */
#define BCMPKT_RXPMD_I2E_CLASSID                 53
/*! Ingress L3 Intf number. */
#define BCMPKT_RXPMD_ING_L3_INTF                 54
/*! Indication to next pass about the type of loopback. */
#define BCMPKT_RXPMD_LOOPBACK_PACKET_TYPE        55
/*! If set, then packet has been modified by the EP and CRC needs to be regenerated */
#define BCMPKT_RXPMD_REGEN_CRC                   56
/*! Entropy label. */
#define BCMPKT_RXPMD_ENTROPY_LABEL               57
/*! Used to indicate if and how a tunnel has been decapsulated from the packet. */
#define BCMPKT_RXPMD_TUNNEL_DECAP_TYPE           58
/*! DLB_ID valid. */
#define BCMPKT_RXPMD_DLB_ID_VALID                59
/*! DLB_ID. */
#define BCMPKT_RXPMD_DLB_ID                      60
/*! HG2 Extended Header Valid. (was in FRC_reserved) */
#define BCMPKT_RXPMD_HG2_EXT_HDR_VALID           61
/*!
 * New field for VNTAG/ETAGs: 00: Do not Modify
 *  01: Add/Replace incoming VNTAG/ETAG with Ingress Port Based VNTAG
 *  10: Add/Replace incoming VNTAG/ETAG with Ingress Port Based ETAG.
 *  11: Delete Packets VNTAG/ETAG
 */
#define BCMPKT_RXPMD_VNTAG_ACTION                62
/*! If set, the DVP/NHOP_INDEX overlay has the DVP. Else, it has the Next Hop Index. */
#define BCMPKT_RXPMD_DVP_NHI_SEL                 63
/*! Validates VFI field */
#define BCMPKT_RXPMD_VFI_VALID                   64
/*!
 * This field's msb is the replication type from the EGR_IPMC table.
 * It is a flag that determines the contents of the lower 15-bits.
 *  0 => Lower 16-bits contain the IPMC_INTF_NUM from the MMU
 *  1 => Lower 16-bits contain the NEXT_HOP_INDEX from the Ingress Pipeline
 */
#define BCMPKT_RXPMD_REPLICATION_OR_NHOP_INDEX   65
/*! Low 32 bits of the packet MATCH_ID. */
#define BCMPKT_RXPMD_MATCH_ID_LO                 66
/*! High 18 bits of the packet MATCH_ID. */
#define BCMPKT_RXPMD_MATCH_ID_HI                 67
/*! MPB flex data_type from MPB_FIXED.flex_data_type */
#define BCMPKT_RXPMD_MPB_FLEX_DATA_TYPE          68
/*! From EPRE/EDEV_CONFIG table EGR_INT_CN_UPDPATE.int_cn */
#define BCMPKT_RXPMD_INT_CN                      69
/*! From MPB_FIXED */
#define BCMPKT_RXPMD_CNG                         70
/*! From MPB_FIXED */
#define BCMPKT_RXPMD_EGR_ZONE_REMAP_CTRL         71
/*! Constant specified in NPL */
#define BCMPKT_RXPMD_DMA_HEADER_VERSION          72
/*! Multicast packet from MPB_FIXED */
#define BCMPKT_RXPMD_MULTICAST                   73
/*! Copy to CPU from MPB_FIXED */
#define BCMPKT_RXPMD_COPY_TO_CPU                 74
/*! Trucate CPU copy from MPB_FIXED */
#define BCMPKT_RXPMD_TRUNCATE_CPU_COPY           75
/*! Incoming INT header type. */
#define BCMPKT_RXPMD_INCOMING_INT_HDR_TYPE       76
/*! MPB_FIXED.dop_trigger. */
#define BCMPKT_RXPMD_DOP_TRIGGER                 77
/*! From EPRE. If mirror pkt then == MIRROR_ENCAP_INDEx else == eparse_extract_offsets[3:0]. */
#define BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_3_0_OR_MIRROR_ENCAP_INDEX 78
/*! Eparse_extract_offsets[7:4]. */
#define BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_7_4  79
/*! Valid for non-BFD packet */
#define BCMPKT_RXPMD_ING_L3_INTF_VALID           80
/*! Overlay next hop. */
#define BCMPKT_RXPMD_O_NHI                       81
/*! Inner Entropy Used indication */
#define BCMPKT_RXPMD_IEU                         82
/*! IEU indication is valid */
#define BCMPKT_RXPMD_IEU_VALID                   83
/*! incoming opaque tag status indication */
#define BCMPKT_RXPMD_INCOMING_OPAQUE_TAG_STATUS  84
/*! Eparse_extract_offsets[6:4]. */
#define BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_6_4  85
/*! From EDEV_CONFIG.SRC_SUBPORT_TABLE. */
#define BCMPKT_RXPMD_ING_PP_PORT                 86
/*! Low 32 bits of the packet ARC_ID. */
#define BCMPKT_RXPMD_ARC_ID_LO                   87
/*! High 18 bits of the packet ARC_ID. */
#define BCMPKT_RXPMD_ARC_ID_HI                   88
/*! IEEE 802_1AS timestamp status. */
#define BCMPKT_RXPMD_IEEE_802_1AS_TIMESTAMP_ENABLED 89
/*! VRF */
#define BCMPKT_RXPMD_VRF                         90
/*! RX chip port. */
#define BCMPKT_RXPMD_RX_CHIP_PORT                91
/*! VPP copy. */
#define BCMPKT_RXPMD_VPP_COPY_TYPE               92
/*! SV tag present status. */
#define BCMPKT_RXPMD_SVTAG_PRESENT               93
/*! Ingress vpp port. */
#define BCMPKT_RXPMD_RX_VPP_PORT                 94
/*! Non switch copy. */
#define BCMPKT_RXPMD_NONSW_COPY                  95
/*!  */
#define BCMPKT_RXPMD_MATCHED_RULE_EP             96
/*!  */
#define BCMPKT_RXPMD_IS_EGR_TS                   97
/*! If set, then packet has been modified by the EP and CRC needs to be regenerated */
#define BCMPKT_RXPMD_MODIFIED_PKT                98
/*! RXPMD FIELD ID NUMBER */
#define BCMPKT_RXPMD_FID_COUNT                   99
/*! \} */

/*! RXPMD field name strings for debugging. */
#define BCMPKT_RXPMD_FIELD_NAME_MAP_INIT \
    {"UNICAST_QUEUE", BCMPKT_RXPMD_UNICAST_QUEUE},\
    {"QUEUE_NUM", BCMPKT_RXPMD_QUEUE_NUM},\
    {"CPU_COS", BCMPKT_RXPMD_CPU_COS},\
    {"HGI", BCMPKT_RXPMD_HGI},\
    {"MATCHED_RULE", BCMPKT_RXPMD_MATCHED_RULE},\
    {"PKT_LENGTH", BCMPKT_RXPMD_PKT_LENGTH},\
    {"SRC_PORT_NUM", BCMPKT_RXPMD_SRC_PORT_NUM},\
    {"INNER_VID", BCMPKT_RXPMD_INNER_VID},\
    {"INNER_CFI", BCMPKT_RXPMD_INNER_CFI},\
    {"INNER_PRI", BCMPKT_RXPMD_INNER_PRI},\
    {"OUTER_VID", BCMPKT_RXPMD_OUTER_VID},\
    {"OUTER_CFI", BCMPKT_RXPMD_OUTER_CFI},\
    {"OUTER_PRI", BCMPKT_RXPMD_OUTER_PRI},\
    {"SPECIAL_PACKET_INDICATOR", BCMPKT_RXPMD_SPECIAL_PACKET_INDICATOR},\
    {"SPECIAL_PACKET_TYPE", BCMPKT_RXPMD_SPECIAL_PACKET_TYPE},\
    {"CHANGE_DSCP", BCMPKT_RXPMD_CHANGE_DSCP},\
    {"DSCP", BCMPKT_RXPMD_DSCP},\
    {"CHANGE_ECN", BCMPKT_RXPMD_CHANGE_ECN},\
    {"ECN", BCMPKT_RXPMD_ECN},\
    {"TIMESTAMP_TYPE", BCMPKT_RXPMD_TIMESTAMP_TYPE},\
    {"TIMESTAMP", BCMPKT_RXPMD_TIMESTAMP},\
    {"TIMESTAMP_HI", BCMPKT_RXPMD_TIMESTAMP_HI},\
    {"MTP_INDEX", BCMPKT_RXPMD_MTP_INDEX},\
    {"BPDU", BCMPKT_RXPMD_BPDU},\
    {"REPLICATION", BCMPKT_RXPMD_REPLICATION},\
    {"L3ONLY", BCMPKT_RXPMD_L3ONLY},\
    {"IP_ROUTED", BCMPKT_RXPMD_IP_ROUTED},\
    {"SRC_HIGIG", BCMPKT_RXPMD_SRC_HIGIG},\
    {"SRC_HIGIG2", BCMPKT_RXPMD_SRC_HIGIG2},\
    {"UC_SW_COPY_DROPPED", BCMPKT_RXPMD_UC_SW_COPY_DROPPED},\
    {"SWITCH", BCMPKT_RXPMD_SWITCH},\
    {"SD_TAG_PRESENT", BCMPKT_RXPMD_SD_TAG_PRESENT},\
    {"ING_ITAG_ACTION", BCMPKT_RXPMD_ING_ITAG_ACTION},\
    {"ING_OTAG_ACTION", BCMPKT_RXPMD_ING_OTAG_ACTION},\
    {"ING_TAG_TYPE", BCMPKT_RXPMD_ING_TAG_TYPE},\
    {"ONE_STEP_1588_ING_UPDATE_DONE", BCMPKT_RXPMD_ONE_STEP_1588_ING_UPDATE_DONE},\
    {"EH_TAG", BCMPKT_RXPMD_EH_TAG},\
    {"EH_TYPE", BCMPKT_RXPMD_EH_TYPE},\
    {"EH_TYPE_0::EH_SEG_SEL", BCMPKT_RXPMD_EH_TYPE_0_EH_SEG_SEL},\
    {"EH_TYPE_0::EH_TAG_TYPE", BCMPKT_RXPMD_EH_TYPE_0_EH_TAG_TYPE},\
    {"EH_TYPE_0::EH_QUEUE_TAG", BCMPKT_RXPMD_EH_TYPE_0_EH_QUEUE_TAG},\
    {"EH_TYPE_1::CLASSID_TYPE", BCMPKT_RXPMD_EH_TYPE_1_CLASSID_TYPE},\
    {"EH_TYPE_1::L3_IIF", BCMPKT_RXPMD_EH_TYPE_1_L3_IIF},\
    {"EH_TYPE_1::CLASSID", BCMPKT_RXPMD_EH_TYPE_1_CLASSID},\
    {"EH_TYPE_2::CLASSID_TYPE", BCMPKT_RXPMD_EH_TYPE_2_CLASSID_TYPE},\
    {"EH_TYPE_2::CLASSID", BCMPKT_RXPMD_EH_TYPE_2_CLASSID},\
    {"EH_TYPE_2::EH_QUEUE_TAG", BCMPKT_RXPMD_EH_TYPE_2_EH_QUEUE_TAG},\
    {"RX_BFD_START_OFFSET", BCMPKT_RXPMD_RX_BFD_START_OFFSET},\
    {"RX_BFD_START_OFFSET_TYPE", BCMPKT_RXPMD_RX_BFD_START_OFFSET_TYPE},\
    {"RX_BFD_SESSION_INDEX", BCMPKT_RXPMD_RX_BFD_SESSION_INDEX},\
    {"REASON_TYPE", BCMPKT_RXPMD_REASON_TYPE},\
    {"DO_NOT_CHANGE_TTL", BCMPKT_RXPMD_DO_NOT_CHANGE_TTL},\
    {"I2E_CLASSID_TYPE", BCMPKT_RXPMD_I2E_CLASSID_TYPE},\
    {"I2E_CLASSID", BCMPKT_RXPMD_I2E_CLASSID},\
    {"ING_L3_INTF", BCMPKT_RXPMD_ING_L3_INTF},\
    {"LOOPBACK_PACKET_TYPE", BCMPKT_RXPMD_LOOPBACK_PACKET_TYPE},\
    {"REGEN_CRC", BCMPKT_RXPMD_REGEN_CRC},\
    {"ENTROPY_LABEL", BCMPKT_RXPMD_ENTROPY_LABEL},\
    {"TUNNEL_DECAP_TYPE", BCMPKT_RXPMD_TUNNEL_DECAP_TYPE},\
    {"DLB_ID_VALID", BCMPKT_RXPMD_DLB_ID_VALID},\
    {"DLB_ID", BCMPKT_RXPMD_DLB_ID},\
    {"HG2_EXT_HDR_VALID", BCMPKT_RXPMD_HG2_EXT_HDR_VALID},\
    {"VNTAG_ACTION", BCMPKT_RXPMD_VNTAG_ACTION},\
    {"DVP_NHI_SEL", BCMPKT_RXPMD_DVP_NHI_SEL},\
    {"VFI_VALID", BCMPKT_RXPMD_VFI_VALID},\
    {"REPLICATION_OR_NHOP_INDEX", BCMPKT_RXPMD_REPLICATION_OR_NHOP_INDEX},\
    {"MATCH_ID_LO", BCMPKT_RXPMD_MATCH_ID_LO},\
    {"MATCH_ID_HI", BCMPKT_RXPMD_MATCH_ID_HI},\
    {"MPB_FLEX_DATA_TYPE", BCMPKT_RXPMD_MPB_FLEX_DATA_TYPE},\
    {"INT_CN", BCMPKT_RXPMD_INT_CN},\
    {"CNG", BCMPKT_RXPMD_CNG},\
    {"EGR_ZONE_REMAP_CTRL", BCMPKT_RXPMD_EGR_ZONE_REMAP_CTRL},\
    {"DMA_HEADER_VERSION", BCMPKT_RXPMD_DMA_HEADER_VERSION},\
    {"MULTICAST", BCMPKT_RXPMD_MULTICAST},\
    {"COPY_TO_CPU", BCMPKT_RXPMD_COPY_TO_CPU},\
    {"TRUNCATE_CPU_COPY", BCMPKT_RXPMD_TRUNCATE_CPU_COPY},\
    {"INCOMING_INT_HDR_TYPE", BCMPKT_RXPMD_INCOMING_INT_HDR_TYPE},\
    {"DOP_TRIGGER", BCMPKT_RXPMD_DOP_TRIGGER},\
    {"EPARSE_EXTRACT_OFFSETS_3_0_OR_MIRROR_ENCAP_INDEX", BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_3_0_OR_MIRROR_ENCAP_INDEX},\
    {"EPARSE_EXTRACT_OFFSETS_7_4", BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_7_4},\
    {"ING_L3_INTF_VALID", BCMPKT_RXPMD_ING_L3_INTF_VALID},\
    {"O_NHI", BCMPKT_RXPMD_O_NHI},\
    {"IEU", BCMPKT_RXPMD_IEU},\
    {"IEU_VALID", BCMPKT_RXPMD_IEU_VALID},\
    {"INCOMING_OPAQUE_TAG_STATUS", BCMPKT_RXPMD_INCOMING_OPAQUE_TAG_STATUS},\
    {"EPARSE_EXTRACT_OFFSETS_6_4", BCMPKT_RXPMD_EPARSE_EXTRACT_OFFSETS_6_4},\
    {"ING_PP_PORT", BCMPKT_RXPMD_ING_PP_PORT},\
    {"ARC_ID_LO", BCMPKT_RXPMD_ARC_ID_LO},\
    {"ARC_ID_HI", BCMPKT_RXPMD_ARC_ID_HI},\
    {"IEEE_802_1AS_TIMESTAMP_ENABLED", BCMPKT_RXPMD_IEEE_802_1AS_TIMESTAMP_ENABLED},\
    {"VRF", BCMPKT_RXPMD_VRF},\
    {"RX_CHIP_PORT", BCMPKT_RXPMD_RX_CHIP_PORT},\
    {"VPP_COPY_TYPE", BCMPKT_RXPMD_VPP_COPY_TYPE},\
    {"SVTAG_PRESENT", BCMPKT_RXPMD_SVTAG_PRESENT},\
    {"RX_VPP_PORT", BCMPKT_RXPMD_RX_VPP_PORT},\
    {"NONSW_COPY", BCMPKT_RXPMD_NONSW_COPY},\
    {"MATCHED_RULE_EP", BCMPKT_RXPMD_MATCHED_RULE_EP},\
    {"IS_EGR_TS", BCMPKT_RXPMD_IS_EGR_TS},\
    {"MODIFIED_PKT", BCMPKT_RXPMD_MODIFIED_PKT},\
    {"fid count", BCMPKT_RXPMD_FID_COUNT}

/*!
 * \name BCMPKT_RXPMD_TIMESTAMP_TYPE encodings.
 * \anchor BCMPKT_RXPMD_TIMESTAMP_TYPE_XXX
 */
/*! \{ */
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_INVALID         0
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_MMU_32NS        1
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_OAM_LM          1
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_OAM_DM          2
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_PM_8NS          2
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_IEEE_802_1AS    3
/*!  */
#define BCMPKT_RXPMD_TIMESTAMP_T_PM_1NS          3
/*! \} */

/*! BCMPKT_RXPMD_TIMESTAMP_TYPE encoding name strings for debugging. */
#define BCMPKT_RXPMD_TIMESTAMP_TYPE_NAME_MAP_INIT \
    {"INVALID", BCMPKT_RXPMD_TIMESTAMP_T_INVALID},\
    {"MMU_32NS", BCMPKT_RXPMD_TIMESTAMP_T_MMU_32NS},\
    {"OAM_LM", BCMPKT_RXPMD_TIMESTAMP_T_OAM_LM},\
    {"OAM_DM", BCMPKT_RXPMD_TIMESTAMP_T_OAM_DM},\
    {"PM_8NS", BCMPKT_RXPMD_TIMESTAMP_T_PM_8NS},\
    {"IEEE_802_1AS", BCMPKT_RXPMD_TIMESTAMP_T_IEEE_802_1AS},\
    {"PM_1NS", BCMPKT_RXPMD_TIMESTAMP_T_PM_1NS},\

/*!
 * \name BCMPKT_RXPMD_ING_TAG_TYPE encodings.
 * \anchor BCMPKT_RXPMD_ING_TAG_TYPE_XXX
 */
/*! \{ */
/*! No tag */
#define BCMPKT_RXPMD_ING_TAG_T_NONE              0
/*! Singgle inner tag */
#define BCMPKT_RXPMD_ING_TAG_T_SINGLE_INNER      1
/*! Tagged */
#define BCMPKT_RXPMD_ING_TAG_T_TAGGED            1
/*! Singgle outer tag */
#define BCMPKT_RXPMD_ING_TAG_T_SINGLE_OUTER      2
/*! Double tags */
#define BCMPKT_RXPMD_ING_TAG_T_DOUBLE            3
/*! \} */

/*! BCMPKT_RXPMD_ING_TAG_TYPE encoding name strings for debugging. */
#define BCMPKT_RXPMD_ING_TAG_TYPE_NAME_MAP_INIT \
    {"NONE", BCMPKT_RXPMD_ING_TAG_T_NONE},\
    {"SINGLE_INNER", BCMPKT_RXPMD_ING_TAG_T_SINGLE_INNER},\
    {"TAGGED", BCMPKT_RXPMD_ING_TAG_T_TAGGED},\
    {"SINGLE_OUTER", BCMPKT_RXPMD_ING_TAG_T_SINGLE_OUTER},\
    {"DOUBLE", BCMPKT_RXPMD_ING_TAG_T_DOUBLE},\

/*!
 * \name BCMPKT_RXPMD_EH_TYPE encodings.
 * \anchor BCMPKT_RXPMD_EH_TYPE_XXX
 */
/*! \{ */
/*!  */
#define BCMPKT_RXPMD_EH_T_0                      0
/*!  */
#define BCMPKT_RXPMD_EH_T_1                      1
/*!  */
#define BCMPKT_RXPMD_EH_T_2                      2
/*! \} */

/*! BCMPKT_RXPMD_EH_TYPE encoding name strings for debugging. */
#define BCMPKT_RXPMD_EH_TYPE_NAME_MAP_INIT \
    {"EH_TYPE_0", BCMPKT_RXPMD_EH_T_0},\
    {"EH_TYPE_1", BCMPKT_RXPMD_EH_T_1},\
    {"EH_TYPE_2", BCMPKT_RXPMD_EH_T_2},\

/*!
 * \name BCMPKT_RXPMD_REASON_TYPE encodings.
 * \anchor BCMPKT_RXPMD_REASON_TYPE_XXX
 */
/*! \{ */
/*!  */
#define BCMPKT_RXPMD_REASON_T_FROM_IP            0
/*!  */
#define BCMPKT_RXPMD_REASON_T_FROM_EP            1
/*! \} */

/*! BCMPKT_RXPMD_REASON_TYPE encoding name strings for debugging. */
#define BCMPKT_RXPMD_REASON_TYPE_NAME_MAP_INIT \
    {"CTC_INITIATED_FROM_IP", BCMPKT_RXPMD_REASON_T_FROM_IP},\
    {"CTC_INITIATED_FROM_EP", BCMPKT_RXPMD_REASON_T_FROM_EP},\

/*!
 * \name RX packet metadata internal usage field IDs.
 * \anchor BCMPKT_RXPMD_I_XXX
 */
/*! \{ */
/*! Invalid BCMPKT_RXPMD_I FID indicator */
#define BCMPKT_RXPMD_I_FID_INVALID               -1
/*! RXPMD raw data size. */
#define BCMPKT_RXPMD_I_SIZE                      0
/*! Contains RX reasons. Refer to bcmpkt_rxpmd_reasons_get to decode reasons. */
#define BCMPKT_RXPMD_I_REASON                    1
/*! Module Header information. Refer to Higig macros to encode/decode this erea. */
#define BCMPKT_RXPMD_I_MODULE_HDR                2
/*! MPB flex_data */
#define BCMPKT_RXPMD_I_FLEX_DATA                 3
/*! RXPMD_I FIELD ID NUMBER */
#define BCMPKT_RXPMD_I_FID_COUNT                 4
/*! \} */

/*! RXPMD_I field name strings for debugging. */
#define BCMPKT_RXPMD_I_FIELD_NAME_MAP_INIT \
    {"SIZE", BCMPKT_RXPMD_I_SIZE},\
    {"REASON", BCMPKT_RXPMD_I_REASON},\
    {"MODULE_HDR", BCMPKT_RXPMD_I_MODULE_HDR},\
    {"FLEX_DATA", BCMPKT_RXPMD_I_FLEX_DATA},\
    {"fid count", BCMPKT_RXPMD_I_FID_COUNT}

/*!
 * \name Packet RX Reason Types.
 * \anchor BCMPKT_RX_REASON_XXX
 */
/*! \{ */
/*! No reason */
#define BCMPKT_RX_REASON_NONE                    0
/*! Adapt miss. */
#define BCMPKT_RX_REASON_ADAPT_MISS              1
/*! IPMC interface mismatch */
#define BCMPKT_RX_REASON_CPU_IPMC_INTERFACE_MISMATCH 2
/*! Get: Indicate NAT REASON happened; Set: Configure NAT REASON mask. */
#define BCMPKT_RX_REASON_NAT                     3
/*! TCP/UDP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_TCP_UDP_MISS        4
/*! ICMP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_ICMP_MISS           5
/*! NAT lookup on fragmented packet. */
#define BCMPKT_RX_REASON_NAT_FRAGMENT            6
/*! Non TCP/UDP/ICMP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_OTHER_MISS          7
/*! FCOE zone check fail */
#define BCMPKT_RX_REASON_FCOE_ZONE_CHECK_FAIL    11
/*! VXLAN VNID miss */
#define BCMPKT_RX_REASON_VXLAN_VN_ID_MISS        12
/*! VXLAN SIP miss */
#define BCMPKT_RX_REASON_VXLAN_SIP_MISS          13
/*! QCN_CNM_PRP_DLF */
#define BCMPKT_RX_REASON_QCN_CNM_PRP_DLF         14
/*! QCN_CNM_PRP */
#define BCMPKT_RX_REASON_QCN_CNM_PRP             15
/*! MPLS_ALERT_LABEL */
#define BCMPKT_RX_REASON_MPLS_ALERT_LABEL        16
/*! MPLS_ILLEGAL_RESERVED_LABEL */
#define BCMPKT_RX_REASON_MPLS_ILLEGAL_RESERVED_LABEL 17
/*! ICNM */
#define BCMPKT_RX_REASON_ICNM                    18
/*! Copy to CPU for visibility packet */
#define BCMPKT_RX_REASON_PACKET_TRACE_TO_CPU     19
/*! BFD Error */
#define BCMPKT_RX_REASON_BFD_ERROR               20
/*! BFD Slowpath to CPU */
#define BCMPKT_RX_REASON_BFD_SLOWPATH            21
/*! L2GRE_VPNID_MISS */
#define BCMPKT_RX_REASON_L2GRE_VPNID_MISS        22
/*! L2GRE_SIP_MISS */
#define BCMPKT_RX_REASON_L2GRE_SIP_MISS          23
/*! Get: Indicate TRILL REASON happened; Set: Configure TRILL REASON mask. */
#define BCMPKT_RX_REASON_TRILL                   24
/*! Trill Header Error */
#define BCMPKT_RX_REASON_TRILL_HDR_ERROR         25
/*! Trill Lookup Miss */
#define BCMPKT_RX_REASON_TRILL_LOOKUP_MISS       26
/*! Trill RPF Check Fail */
#define BCMPKT_RX_REASON_TRILL_RPF_CHECK_FAIL    27
/*! Trill Slow Path */
#define BCMPKT_RX_REASON_TRILL_SLOWPATH          28
/*! Trill Core IS-IS */
#define BCMPKT_RX_REASON_TRILL_CORE_IS_IS_PKT    29
/*! Trill Hop Count Check Failure */
#define BCMPKT_RX_REASON_TRILL_HOP_COUNT_CHECK_FAIL 30
/*! Rbridge nickname lookup copy to cpu */
#define BCMPKT_RX_REASON_TRILL_NICKNAME_TABLE    31
/*! Tunnel decap ECN error */
#define BCMPKT_RX_REASON_TUNNEL_DECAP_ECN_ERROR  32
/*! OAM packets copied to the CPU for slowpath processing */
#define BCMPKT_RX_REASON_OAM_SLOWPATH            33
/*!
 * Indicates packet was copied to CPU due to a network time sync packet.  This is
 * set either by dedicated IEEE 802.1AS controls or the FP.
 */
#define BCMPKT_RX_REASON_TIME_SYNC               34
/*! Indicates packet was copied to the CPU due to VLAN Translation miss. */
#define BCMPKT_RX_REASON_VXLT_MISS               35
/*! Get: Indicate NIV REASON happened; Set: Configure NIV REASON mask. */
#define BCMPKT_RX_REASON_NIV                     36
/*! Dot1p Admittance Discard */
#define BCMPKT_RX_REASON_NIV_DOT1P_DROP          37
/*! VIF Lookup Miss */
#define BCMPKT_RX_REASON_NIV_VIF_MISS            38
/*! RPF Lookup Miss */
#define BCMPKT_RX_REASON_NIV_RPF_MISS            39
/*! VNTAG Format Error */
#define BCMPKT_RX_REASON_NIV_VNTAG_ERROR         40
/*! VNTAG Present Drop */
#define BCMPKT_RX_REASON_NIV_VNTAG_PRESENT       41
/*! VNTAG Not Present Drop */
#define BCMPKT_RX_REASON_NIV_VNTAG_NOT_PRESENT   42
/*! Copy to CPU for MY_STATION match reason */
#define BCMPKT_RX_REASON_MY_STATION              44
/*! MPLS unknown ACH */
#define BCMPKT_RX_REASON_MPLS_UNKNOWN_ACH_ERROR  45
/*! ING_L3_NEXT_HOP table copy to CPU */
#define BCMPKT_RX_REASON_L3_NEXT_HOP             46
/*! Provider Backbone Transport pkt is not unicast */
#define BCMPKT_RX_REASON_PBT_NONUC_PKT           47
/*! Bit32 - MPLS sequence number check fail */
#define BCMPKT_RX_REASON_MPLS_SEQ_NUM_FAIL       48
/*! Bit31 - MPLS TTL check fail */
#define BCMPKT_RX_REASON_MPLS_TTL_CHECK_FAIL     49
/*! Bit30 - MPLS invalid payload */
#define BCMPKT_RX_REASON_MPLS_INVALID_PAYLOAD    50
/*! Bit29 - MPLS invalid label action */
#define BCMPKT_RX_REASON_MPLS_INVALID_ACTION     51
/*! Bit28 - MPLS label lookup miss */
#define BCMPKT_RX_REASON_MPLS_LABEL_MISS         52
/*! Copy to CPU for MAC to IP bind check failures */
#define BCMPKT_RX_REASON_MAC_BIND_FAIL           53
/*! Bit26 - CBSM_PREVENTED - copy to CPU */
#define BCMPKT_RX_REASON_CBSM_PREVENTED          54
/*! Bit25 - VFP Action - copy to CPU */
#define BCMPKT_RX_REASON_CPU_VFP                 55
/*! Bit24 - Multicast index error */
#define BCMPKT_RX_REASON_MCIDX_ERROR             56
/*! Bit23 - HiGig Header error */
#define BCMPKT_RX_REASON_HGHDR_ERROR             57
/*! Bit22 - L3 MTU check fail to CPU */
#define BCMPKT_RX_REASON_L3_MTU_CHECK_FAIL       58
/*! Bit21 - Parity error on IP tables */
#define BCMPKT_RX_REASON_PARITY_ERROR            59
/*! Bit20 - L3 slow path CPU processed packets */
#define BCMPKT_RX_REASON_L3_SLOWPATH             60
/*! Bit19 - ICMP Redirect copy to CPU */
#define BCMPKT_RX_REASON_ICMP_REDIRECT           61
/*! Bit18 - Flex Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_FLEX          62
/*! Bit17 - Tunnel error trap to CPU */
#define BCMPKT_RX_REASON_CPU_TUNNEL_ERR          63
/*! Bit16 - Martian address trap to CPU */
#define BCMPKT_RX_REASON_CPU_MARTIAN_ADDR        64
/*! Bit15 - DOS attack trap to CPU */
#define BCMPKT_RX_REASON_CPU_DOS_ATTACK          65
/*! Bit14 - Protocol Packet */
#define BCMPKT_RX_REASON_CPU_PROTOCOL_PKT        66
/*! Bit13 - L3 header  - IP options, TTL=0, !IPv4 etc. */
#define BCMPKT_RX_REASON_CPU_L3HDR_ERR           67
/*! Bit12 - FFP Action - copy to CPU */
#define BCMPKT_RX_REASON_CPU_FFP                 68
/*! Bit11 - IPMC miss - {SIP, DIP} miss or DIP miss */
#define BCMPKT_RX_REASON_CPU_IPMC_MISS           69
/*! Bit10 - MC miss */
#define BCMPKT_RX_REASON_CPU_MC_MISS             70
/*! Bit9 - Station Movement - L3 */
#define BCMPKT_RX_REASON_CPU_L3SRC_MOVE          71
/*! Bit8 - L3 DIP Miss */
#define BCMPKT_RX_REASON_CPU_L3DST_MISS          72
/*! Bit7 - L3 SIP Miss */
#define BCMPKT_RX_REASON_CPU_L3SRC_MISS          73
/*! Bit6 - sFlow - Dst */
#define BCMPKT_RX_REASON_CPU_SFLOW_DST           74
/*! Bit5 - sFlow - Src */
#define BCMPKT_RX_REASON_CPU_SFLOW_SRC           75
/*! Bit4 - L2_TABLE - copy to CPU */
#define BCMPKT_RX_REASON_CPU_L2CPU               76
/*! Bit3- Station Movement - L2 */
#define BCMPKT_RX_REASON_CPU_L2MOVE              77
/*! Bit2 - DLF, */
#define BCMPKT_RX_REASON_CPU_DLF                 78
/*! Bit1 - SLF */
#define BCMPKT_RX_REASON_CPU_SLF                 79
/*! Bit0- CPU Learn bit is set in PTABLE and SA is learnt; unknown VLAN; VID = 0xfff */
#define BCMPKT_RX_REASON_CPU_UVLAN               80
/*! Bit18 - protection data dropped packet copied to CPU */
#define BCMPKT_RX_REASON_PROTECTION_DATA_DROP    81
/*! OAM packets copied to the CPU for error cases */
#define BCMPKT_RX_REASON_OAM_ERROR               82
/*! Copy to CPU for OAM LMDM */
#define BCMPKT_RX_REASON_OAM_LMDM                83
/*! Get: Indicate SFLOW REASON happened; Set: Configure SFLOW REASON mask. */
#define BCMPKT_RX_REASON_CPU_SFLOW               84
/*! FP based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_FLEX 85
/*! Egress port-based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_DST 86
/*! Ingress port-based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_SRC 87
/*! Get: Indicate SFLOW REASON happened; Set: Configure SFLOW REASON mask. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR         88
/*! Invalid payload. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_PAYLOAD 89
/*! Invalid action. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_ACTION 90
/*! Lookup label miss. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_LABEL_MISS 91
/*! TTL check fail. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_TTL_CHECK_FAIL 92
/*! TBD. */
#define BCMPKT_RX_REASON_MPLS_UNKNOWN_CONTROL_PKT 96
/*! Copied to CPU by ETRAP monitor. */
#define BCMPKT_RX_REASON_ETRAP_MONITOR           97
/*! Copied to CPU by Inband Telemetry turnaround. */
#define BCMPKT_RX_REASON_INT_TURN_AROUND         98
/*! Copied to CPU by DLB monitor. */
#define BCMPKT_RX_REASON_DLB_MONITOR             99
/*! Bit13 - L3 header  - IP options, TTL=0, !IPv4 etc. */
#define BCMPKT_RX_REASON_CPU_L3_HDR_MISMATCH     100
/*! Bit31 - tunnel with object validation check fail */
#define BCMPKT_RX_REASON_TUNNEL_OBJECT_VALIDATION_FAIL 101
/*! L3 copy to CPU. */
#define BCMPKT_RX_REASON_CPU_L3CPU               102
/*! VNTAG unknown SUBTENDING port */
#define BCMPKT_RX_REASON_VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR 103
/*! RPF Lookup Miss */
#define BCMPKT_RX_REASON_RPF_MISS                104
/*! Dot1p Admittance Discard */
#define BCMPKT_RX_REASON_DOT1P_ADMITTANCE_DISCARD 105
/*!
 * It should be renamed to TUNNEL_ADAPT_LOOKUP_CPU. Indicates packet was copied
 * to the CPU due to TUNNEL_ADAPT_LOOKUP's miss policy or hit policy copy to cpu.
 */
#define BCMPKT_RX_REASON_TUNNEL_ADAPT_LOOKUP_MISS_DROP 106
/*! PKT_FLOW_SELECT_MISS_TO_CPU */
#define BCMPKT_RX_REASON_PKT_FLOW_SELECT_MISS    107
/*! Indicates packet was copied to the CPU due to PKT_FLOW_SELECT policy. */
#define BCMPKT_RX_REASON_PKT_FLOW_SELECT         108
/*!
 * It should be renamed to TUNNEL_ADAPT_LOOKUP_MISS_TO_CPU_FROM_LOGICAL_TABLE_SEL.
 * Indicates packet was copied to the CPU due to FORWARDING_LOOKUP miss.
 */
#define BCMPKT_RX_REASON_CPU_FORWARDING_OTHER    109
/*!  */
#define BCMPKT_RX_REASON_INVALID_TPID            110
/*!  */
#define BCMPKT_RX_REASON_MPLS_CONTROL_PKT        111
/*! TUNNEL_ERR_TO_CPU */
#define BCMPKT_RX_REASON_TUNNEL_ERR              112
/*! TUNNEL_TTL_ERR_TO_CPU  Error */
#define BCMPKT_RX_REASON_TUNNEL_TTL_ERR          113
/*!  */
#define BCMPKT_RX_REASON_L3_HDR_ERROR            114
/*!  */
#define BCMPKT_RX_REASON_L2_HDR_ERROR            115
/*!  */
#define BCMPKT_RX_REASON_TTL1_ERR                116
/*!  */
#define BCMPKT_RX_REASON_TTL_ERR                 117
/*! Nat error packet. */
#define BCMPKT_RX_REASON_NAT_ERROR               118
/*! L2 MTU check fail to CPU */
#define BCMPKT_RX_REASON_L2_MTU_CHECK_FAIL       119
/*! Over system MAC limit threshold to CPU */
#define BCMPKT_RX_REASON_L2_MAC_LIMIT            120
/*! L2 STU check fail to CPU */
#define BCMPKT_RX_REASON_L2_STU_CHECK_FAIL       121
/*! SR counter threshold exceeded to CPU. */
#define BCMPKT_RX_REASON_SR_COUNTER_LIMIT        122
/*! SRV6_PROC_ERROR */
#define BCMPKT_RX_REASON_SRV6_ERROR              123
/*! Protection status = down. */
#define BCMPKT_RX_REASON_NH_PROTO_STATUS_DOWN    124
/*! Invalid opcode. */
#define BCMPKT_RX_REASON_CPU_INVALID_REASON      125
/*! MPLS TTL Check. */
#define BCMPKT_RX_REASON_MPLS_TTL_CHECK          126
/*! Bit Definitions of the CPU Opcodes. */
#define BCMPKT_RX_REASON_SVTAG_CPU_BIT_SET       127
/*! Subport ID lookup miss in Channelization. */
#define BCMPKT_RX_REASON_SUBPORT_ID_LOOKUP_MISS  128
/*! OAM operation. */
#define BCMPKT_RX_REASON_OAM_PROCESSING          129
/*! Invalid. */
#define BCMPKT_RX_REASON_OAM_PROCESSING_INVALID  130
/*! OAM CCM. */
#define BCMPKT_RX_REASON_OAM_PROCESSING_OAM_CCM  131
/*! OAM LM. */
#define BCMPKT_RX_REASON_OAM_PROCESSING_OAM_LM   132
/*! OAM DM. */
#define BCMPKT_RX_REASON_OAM_PROCESSING_OAM_DM   133
/*! OAM Other opcodes. */
#define BCMPKT_RX_REASON_OAM_PROCESSING_OAM_OTHER_OPCODES 134
/*! Invalid GSH or NON_GSH packet based on port configuration. */
#define BCMPKT_RX_REASON_INVALID_GSH_NON_GSH     137
/*! Copy to CPU triggered at egress pipeline. */
#define BCMPKT_RX_REASON_EP_CTC                  138
/*! Indicates SVTAG.ERROR !=0 or SVTAG.CPU = 1. */
#define BCMPKT_RX_REASON_MACSEC                  139
/*! APU Policy CTC. */
#define BCMPKT_RX_REASON_APU_POLICY_CTC          140
/*! Delayed CTC. */
#define BCMPKT_RX_REASON_DELAYED_CTC             141
/*! Indicates Copy to CPU is for PORT_DOWN event. */
#define BCMPKT_RX_REASON_PORT_DOWN               142
/*! SRV6 Control Packet */
#define BCMPKT_RX_REASON_SRV6_CONTROL_PKT        143
/*! OUI Compression miss */
#define BCMPKT_RX_REASON_OUI_COMPRESSION_MISS    144
/*! BCMPKT_RX_REASON TYPE NUMBER */
#define BCMPKT_RX_REASON_COUNT                   145
/*! \} */

/*! RXPMD reason name strings for debugging. */
#define BCMPKT_REASON_NAME_MAP_INIT \
    {"NONE", BCMPKT_RX_REASON_NONE},\
    {"ADAPT_MISS", BCMPKT_RX_REASON_ADAPT_MISS},\
    {"CPU_IPMC_INTERFACE_MISMATCH", BCMPKT_RX_REASON_CPU_IPMC_INTERFACE_MISMATCH},\
    {"NAT", BCMPKT_RX_REASON_NAT},\
    {"NAT_TCP_UDP_MISS", BCMPKT_RX_REASON_NAT_TCP_UDP_MISS},\
    {"NAT_ICMP_MISS", BCMPKT_RX_REASON_NAT_ICMP_MISS},\
    {"NAT_FRAGMENT", BCMPKT_RX_REASON_NAT_FRAGMENT},\
    {"NAT_OTHER_MISS", BCMPKT_RX_REASON_NAT_OTHER_MISS},\
    {"RESERVED_REASON", 8},\
    {"RESERVED_REASON", 9},\
    {"RESERVED_REASON", 10},\
    {"FCOE_ZONE_CHECK_FAIL", BCMPKT_RX_REASON_FCOE_ZONE_CHECK_FAIL},\
    {"VXLAN_VN_ID_MISS", BCMPKT_RX_REASON_VXLAN_VN_ID_MISS},\
    {"VXLAN_SIP_MISS", BCMPKT_RX_REASON_VXLAN_SIP_MISS},\
    {"QCN_CNM_PRP_DLF", BCMPKT_RX_REASON_QCN_CNM_PRP_DLF},\
    {"QCN_CNM_PRP", BCMPKT_RX_REASON_QCN_CNM_PRP},\
    {"MPLS_ALERT_LABEL", BCMPKT_RX_REASON_MPLS_ALERT_LABEL},\
    {"MPLS_ILLEGAL_RESERVED_LABEL", BCMPKT_RX_REASON_MPLS_ILLEGAL_RESERVED_LABEL},\
    {"ICNM", BCMPKT_RX_REASON_ICNM},\
    {"PACKET_TRACE_TO_CPU", BCMPKT_RX_REASON_PACKET_TRACE_TO_CPU},\
    {"BFD_ERROR", BCMPKT_RX_REASON_BFD_ERROR},\
    {"BFD_SLOWPATH", BCMPKT_RX_REASON_BFD_SLOWPATH},\
    {"L2GRE_VPNID_MISS", BCMPKT_RX_REASON_L2GRE_VPNID_MISS},\
    {"L2GRE_SIP_MISS", BCMPKT_RX_REASON_L2GRE_SIP_MISS},\
    {"TRILL", BCMPKT_RX_REASON_TRILL},\
    {"TRILL_HDR_ERROR", BCMPKT_RX_REASON_TRILL_HDR_ERROR},\
    {"TRILL_LOOKUP_MISS", BCMPKT_RX_REASON_TRILL_LOOKUP_MISS},\
    {"TRILL_RPF_CHECK_FAIL", BCMPKT_RX_REASON_TRILL_RPF_CHECK_FAIL},\
    {"TRILL_SLOWPATH", BCMPKT_RX_REASON_TRILL_SLOWPATH},\
    {"TRILL_CORE_IS_IS_PKT", BCMPKT_RX_REASON_TRILL_CORE_IS_IS_PKT},\
    {"TRILL_HOP_COUNT_CHECK_FAIL", BCMPKT_RX_REASON_TRILL_HOP_COUNT_CHECK_FAIL},\
    {"TRILL_NICKNAME_TABLE", BCMPKT_RX_REASON_TRILL_NICKNAME_TABLE},\
    {"TUNNEL_DECAP_ECN_ERROR", BCMPKT_RX_REASON_TUNNEL_DECAP_ECN_ERROR},\
    {"OAM_SLOWPATH", BCMPKT_RX_REASON_OAM_SLOWPATH},\
    {"TIME_SYNC", BCMPKT_RX_REASON_TIME_SYNC},\
    {"VXLT_MISS", BCMPKT_RX_REASON_VXLT_MISS},\
    {"NIV", BCMPKT_RX_REASON_NIV},\
    {"NIV_DOT1P_DROP", BCMPKT_RX_REASON_NIV_DOT1P_DROP},\
    {"NIV_VIF_MISS", BCMPKT_RX_REASON_NIV_VIF_MISS},\
    {"NIV_RPF_MISS", BCMPKT_RX_REASON_NIV_RPF_MISS},\
    {"NIV_VNTAG_ERROR", BCMPKT_RX_REASON_NIV_VNTAG_ERROR},\
    {"NIV_VNTAG_PRESENT", BCMPKT_RX_REASON_NIV_VNTAG_PRESENT},\
    {"NIV_VNTAG_NOT_PRESENT", BCMPKT_RX_REASON_NIV_VNTAG_NOT_PRESENT},\
    {"RESERVED_REASON", 43},\
    {"MY_STATION", BCMPKT_RX_REASON_MY_STATION},\
    {"MPLS_UNKNOWN_ACH_ERROR", BCMPKT_RX_REASON_MPLS_UNKNOWN_ACH_ERROR},\
    {"L3_NEXT_HOP", BCMPKT_RX_REASON_L3_NEXT_HOP},\
    {"PBT_NONUC_PKT", BCMPKT_RX_REASON_PBT_NONUC_PKT},\
    {"MPLS_SEQ_NUM_FAIL", BCMPKT_RX_REASON_MPLS_SEQ_NUM_FAIL},\
    {"MPLS_TTL_CHECK_FAIL", BCMPKT_RX_REASON_MPLS_TTL_CHECK_FAIL},\
    {"MPLS_INVALID_PAYLOAD", BCMPKT_RX_REASON_MPLS_INVALID_PAYLOAD},\
    {"MPLS_INVALID_ACTION", BCMPKT_RX_REASON_MPLS_INVALID_ACTION},\
    {"MPLS_LABEL_MISS", BCMPKT_RX_REASON_MPLS_LABEL_MISS},\
    {"MAC_BIND_FAIL", BCMPKT_RX_REASON_MAC_BIND_FAIL},\
    {"CBSM_PREVENTED", BCMPKT_RX_REASON_CBSM_PREVENTED},\
    {"CPU_VFP", BCMPKT_RX_REASON_CPU_VFP},\
    {"MCIDX_ERROR", BCMPKT_RX_REASON_MCIDX_ERROR},\
    {"HGHDR_ERROR", BCMPKT_RX_REASON_HGHDR_ERROR},\
    {"L3_MTU_CHECK_FAIL", BCMPKT_RX_REASON_L3_MTU_CHECK_FAIL},\
    {"PARITY_ERROR", BCMPKT_RX_REASON_PARITY_ERROR},\
    {"L3_SLOWPATH", BCMPKT_RX_REASON_L3_SLOWPATH},\
    {"ICMP_REDIRECT", BCMPKT_RX_REASON_ICMP_REDIRECT},\
    {"CPU_SFLOW_FLEX", BCMPKT_RX_REASON_CPU_SFLOW_FLEX},\
    {"CPU_TUNNEL_ERR", BCMPKT_RX_REASON_CPU_TUNNEL_ERR},\
    {"CPU_MARTIAN_ADDR", BCMPKT_RX_REASON_CPU_MARTIAN_ADDR},\
    {"CPU_DOS_ATTACK", BCMPKT_RX_REASON_CPU_DOS_ATTACK},\
    {"CPU_PROTOCOL_PKT", BCMPKT_RX_REASON_CPU_PROTOCOL_PKT},\
    {"CPU_L3HDR_ERR", BCMPKT_RX_REASON_CPU_L3HDR_ERR},\
    {"CPU_FFP", BCMPKT_RX_REASON_CPU_FFP},\
    {"CPU_IPMC_MISS", BCMPKT_RX_REASON_CPU_IPMC_MISS},\
    {"CPU_MC_MISS", BCMPKT_RX_REASON_CPU_MC_MISS},\
    {"CPU_L3SRC_MOVE", BCMPKT_RX_REASON_CPU_L3SRC_MOVE},\
    {"CPU_L3DST_MISS", BCMPKT_RX_REASON_CPU_L3DST_MISS},\
    {"CPU_L3SRC_MISS", BCMPKT_RX_REASON_CPU_L3SRC_MISS},\
    {"CPU_SFLOW_DST", BCMPKT_RX_REASON_CPU_SFLOW_DST},\
    {"CPU_SFLOW_SRC", BCMPKT_RX_REASON_CPU_SFLOW_SRC},\
    {"CPU_L2CPU", BCMPKT_RX_REASON_CPU_L2CPU},\
    {"CPU_L2MOVE", BCMPKT_RX_REASON_CPU_L2MOVE},\
    {"CPU_DLF", BCMPKT_RX_REASON_CPU_DLF},\
    {"CPU_SLF", BCMPKT_RX_REASON_CPU_SLF},\
    {"CPU_UVLAN", BCMPKT_RX_REASON_CPU_UVLAN},\
    {"PROTECTION_DATA_DROP", BCMPKT_RX_REASON_PROTECTION_DATA_DROP},\
    {"OAM_ERROR", BCMPKT_RX_REASON_OAM_ERROR},\
    {"OAM_LMDM", BCMPKT_RX_REASON_OAM_LMDM},\
    {"CPU_SFLOW", BCMPKT_RX_REASON_CPU_SFLOW},\
    {"CPU_SFLOW_CPU_SFLOW_FLEX", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_FLEX},\
    {"CPU_SFLOW_CPU_SFLOW_DST", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_DST},\
    {"CPU_SFLOW_CPU_SFLOW_SRC", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_SRC},\
    {"MPLS_PROC_ERROR", BCMPKT_RX_REASON_MPLS_PROC_ERROR},\
    {"MPLS_PROC_ERROR_INVALID_PAYLOAD", BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_PAYLOAD},\
    {"MPLS_PROC_ERROR_INVALID_ACTION", BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_ACTION},\
    {"MPLS_PROC_ERROR_LABEL_MISS", BCMPKT_RX_REASON_MPLS_PROC_ERROR_LABEL_MISS},\
    {"MPLS_PROC_ERROR_TTL_CHECK_FAIL", BCMPKT_RX_REASON_MPLS_PROC_ERROR_TTL_CHECK_FAIL},\
    {"RESERVED_REASON", 93},\
    {"RESERVED_REASON", 94},\
    {"RESERVED_REASON", 95},\
    {"MPLS_UNKNOWN_CONTROL_PKT", BCMPKT_RX_REASON_MPLS_UNKNOWN_CONTROL_PKT},\
    {"ETRAP_MONITOR", BCMPKT_RX_REASON_ETRAP_MONITOR},\
    {"INT_TURN_AROUND", BCMPKT_RX_REASON_INT_TURN_AROUND},\
    {"DLB_MONITOR", BCMPKT_RX_REASON_DLB_MONITOR},\
    {"CPU_L3_HDR_MISMATCH", BCMPKT_RX_REASON_CPU_L3_HDR_MISMATCH},\
    {"TUNNEL_OBJECT_VALIDATION_FAIL", BCMPKT_RX_REASON_TUNNEL_OBJECT_VALIDATION_FAIL},\
    {"CPU_L3CPU", BCMPKT_RX_REASON_CPU_L3CPU},\
    {"VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR", BCMPKT_RX_REASON_VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR},\
    {"RPF_MISS", BCMPKT_RX_REASON_RPF_MISS},\
    {"DOT1P_ADMITTANCE_DISCARD", BCMPKT_RX_REASON_DOT1P_ADMITTANCE_DISCARD},\
    {"TUNNEL_ADAPT_LOOKUP_MISS_DROP", BCMPKT_RX_REASON_TUNNEL_ADAPT_LOOKUP_MISS_DROP},\
    {"PKT_FLOW_SELECT_MISS", BCMPKT_RX_REASON_PKT_FLOW_SELECT_MISS},\
    {"PKT_FLOW_SELECT", BCMPKT_RX_REASON_PKT_FLOW_SELECT},\
    {"CPU_FORWARDING_OTHER", BCMPKT_RX_REASON_CPU_FORWARDING_OTHER},\
    {"INVALID_TPID", BCMPKT_RX_REASON_INVALID_TPID},\
    {"MPLS_CONTROL_PKT", BCMPKT_RX_REASON_MPLS_CONTROL_PKT},\
    {"TUNNEL_ERR", BCMPKT_RX_REASON_TUNNEL_ERR},\
    {"TUNNEL_TTL_ERR", BCMPKT_RX_REASON_TUNNEL_TTL_ERR},\
    {"L3_HDR_ERROR", BCMPKT_RX_REASON_L3_HDR_ERROR},\
    {"L2_HDR_ERROR", BCMPKT_RX_REASON_L2_HDR_ERROR},\
    {"TTL1_ERR", BCMPKT_RX_REASON_TTL1_ERR},\
    {"TTL_ERR", BCMPKT_RX_REASON_TTL_ERR},\
    {"NAT_ERROR", BCMPKT_RX_REASON_NAT_ERROR},\
    {"L2_MTU_CHECK_FAIL", BCMPKT_RX_REASON_L2_MTU_CHECK_FAIL},\
    {"L2_MAC_LIMIT", BCMPKT_RX_REASON_L2_MAC_LIMIT},\
    {"L2_STU_CHECK_FAIL", BCMPKT_RX_REASON_L2_STU_CHECK_FAIL},\
    {"SR_COUNTER_LIMIT", BCMPKT_RX_REASON_SR_COUNTER_LIMIT},\
    {"SRV6_ERROR", BCMPKT_RX_REASON_SRV6_ERROR},\
    {"NH_PROTO_STATUS_DOWN", BCMPKT_RX_REASON_NH_PROTO_STATUS_DOWN},\
    {"CPU_INVALID_REASON", BCMPKT_RX_REASON_CPU_INVALID_REASON},\
    {"MPLS_TTL_CHECK", BCMPKT_RX_REASON_MPLS_TTL_CHECK},\
    {"SVTAG_CPU_BIT_SET", BCMPKT_RX_REASON_SVTAG_CPU_BIT_SET},\
    {"SUBPORT_ID_LOOKUP_MISS", BCMPKT_RX_REASON_SUBPORT_ID_LOOKUP_MISS},\
    {"OAM_PROCESSING", BCMPKT_RX_REASON_OAM_PROCESSING},\
    {"OAM_PROCESSING_INVALID", BCMPKT_RX_REASON_OAM_PROCESSING_INVALID},\
    {"OAM_PROCESSING_OAM_CCM", BCMPKT_RX_REASON_OAM_PROCESSING_OAM_CCM},\
    {"OAM_PROCESSING_OAM_LM", BCMPKT_RX_REASON_OAM_PROCESSING_OAM_LM},\
    {"OAM_PROCESSING_OAM_DM", BCMPKT_RX_REASON_OAM_PROCESSING_OAM_DM},\
    {"OAM_PROCESSING_OAM_OTHER_OPCODES", BCMPKT_RX_REASON_OAM_PROCESSING_OAM_OTHER_OPCODES},\
    {"RESERVED_REASON", 135},\
    {"RESERVED_REASON", 136},\
    {"INVALID_GSH_NON_GSH", BCMPKT_RX_REASON_INVALID_GSH_NON_GSH},\
    {"EP_CTC", BCMPKT_RX_REASON_EP_CTC},\
    {"MACSEC", BCMPKT_RX_REASON_MACSEC},\
    {"APU_POLICY_CTC", BCMPKT_RX_REASON_APU_POLICY_CTC},\
    {"DELAYED_CTC", BCMPKT_RX_REASON_DELAYED_CTC},\
    {"PORT_DOWN", BCMPKT_RX_REASON_PORT_DOWN},\
    {"SRV6_CONTROL_PKT", BCMPKT_RX_REASON_SRV6_CONTROL_PKT},\
    {"OUI_COMPRESSION_MISS", BCMPKT_RX_REASON_OUI_COMPRESSION_MISS},\
    {"reason count", BCMPKT_RX_REASON_COUNT}

#endif /*! BCMPKT_RXPMD_DEFS_H */
